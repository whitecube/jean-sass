// get col width
@use "sass:math";

$col_width: math.div($grid_width - (($grid_columns - 1) * $gutter_size), $grid_columns);


//  - fixedGut( $col: number )
// **********************************************************
// returns size based on the specified amount of gutter.
// uses the units you chose in config/global
// **********************************************************

@function fixedGut($gut){
    @if $gut == 0 { @return 0 }
    @return    ($gut * $gutter_size);
}

//  - fixedCol( $col: number )
// **********************************************************
// returns size based on the specified amount of columns.
// uses the units you chose in config/global
// **********************************************************

@function fixedCol($col){
    @if $col == 0 { @return 0 }
    @return ( ( $col * $col_width ) + ( ( decimal-ceil($col) - 1 ) * $gutter_size ) );
}


//  - col( $col: number, $parent: number )
// **********************************************************
// returns box size in %
// **********************************************************

@function col($col,$parent){
    @if $col == 0 { @return 0 }
    @return percentage( math.div(fixedCol($col), fixedCol($parent)) );
}


// - gutter( $parent: number )
// **********************************************************
// returns gutter size in % depending on number
// of parent-columns
// **********************************************************

@function gutter($parent){
    @if $parent == 0 { @return 0 }
    @return percentage(math.div($gutter_size, fixedCol($parent)) );
}


//  - colGut( $col: number, $colParent: number, $gutParent: number )
// **********************************************************
// returns box size in %
// **********************************************************

@function colGut($col, $gut, $colParent, $gutParent){
    @return percentage( math.div(fixedCol($col) + fixedGut($gut), fixedCol($colParent) + fixedGut($gutParent)) );
}


// - @include respVideoContainer( $col: number, $parent: number )
// **********************************************************
// Uses col among other properties to create a
// video container (iframe) for the amout of columns in
// a certain amount of parent-columns
// **********************************************************

@mixin respVideoContainer( $col, $parent){
    width: col($col, $parent);
    padding-bottom: ( col($col, $parent) * 0.5625 );
    height: 0;
    position: relative;
    & iframe{
        width: 100%;
        height: 100%;
        display: block;
        position: absolute;
        top:0;
        left:0;
    }
}

// - background: $grid_gradient;
// **********************************************************
// Gradient value to display the grid
// **********************************************************

$grid_gradient: repeating-linear-gradient(
    90deg,
    tomato,
    tomato col(1, $grid_columns),
    white col(1, $grid_columns),
    white col(1, $grid_columns) + gutter($grid_columns)
);


// - @include grid( $columnColor, $gutterColor, $columns );
// **********************************************************
// Includes a background gradient to display the grid
// Can size properly in sub-grids by including the size 
// of the parent as a last argument
// **********************************************************

@mixin grid($columnColor: tomato, $gutterColor: white, $columns: $grid_columns) {
    background: repeating-linear-gradient(
        90deg,
        $columnColor,
        $columnColor col(1, $columns),
        $gutterColor col(1, $columns),
        $gutterColor col(1, $columns) + gutter($columns)
    );
}
